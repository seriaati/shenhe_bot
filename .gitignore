# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/
main.db
log.txt
playground.py
shenhe.db
test.py
ambr/cache/chs/*
ambr/cache/cht/*
ambr/cache/de/*
ambr/cache/en/*
ambr/cache/es/*
ambr/cache/fr/*
ambr/cache/id/*
ambr/cache/jp/*
ambr/cache/kr/*
ambr/cache/pt/*
ambr/cache/ru/*
ambr/cache/th/*
ambr/cache/vi/*
ambr/cache/tr/*
ambr/cache/it/*
ambr/cache/static/*
data/cache/*
backup.db
text_maps/avatar.json
text_maps/dailyDungeon.json
text_maps/material.json
text_maps/reliquary.json
text_maps/weapon.json
data/game/artifact_map.json
data/game/character_map.json
data/game/weapon_map.json
data/abyss_leaderboard
text_maps/item_name.json
text_maps/book.json
text_maps/food.json
text_maps/furniture.json
text_maps/monster.json
text_maps/namecard.json
data/cards/*.json
apps/hoyolab_rss_feeds/feeds/*
.vscode
apps/draw/cache/*
shenhe.db-shm
shenhe.db-wal
command_map.json
data/genshin/text_maps/*
data/star_rail/text_maps/*
!/**/.gitkeep